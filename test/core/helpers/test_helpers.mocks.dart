// Mocks generated by Mockito 5.4.2 from annotations
// in quick_flashcards/test/core/helpers/test_helpers.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:flutter_riverpod/flutter_riverpod.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:quick_flashcards/app/presentation/logic/flashcards_logic/add_flashcard_notifier.dart'
    as _i2;
import 'package:state_notifier/state_notifier.dart' as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [AddFlashcardNotifier].
///
/// See the documentation for Mockito's code generation for more information.
class MockAddFlashcardNotifier extends _i1.Mock
    implements _i2.AddFlashcardNotifier {
  MockAddFlashcardNotifier() {
    _i1.throwOnMissingStub(this);
  }

  @override
  set onError(_i3.ErrorListener? _onError) => super.noSuchMethod(
        Invocation.setter(
          #onError,
          _onError,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get mounted => (super.noSuchMethod(
        Invocation.getter(#mounted),
        returnValue: false,
      ) as bool);
  @override
  _i4.Stream<_i2.AddFlashcardState> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i4.Stream<_i2.AddFlashcardState>.empty(),
      ) as _i4.Stream<_i2.AddFlashcardState>);
  @override
  _i2.AddFlashcardState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _i2.AddFlashcardState.initial,
      ) as _i2.AddFlashcardState);
  @override
  set state(_i2.AddFlashcardState? value) => super.noSuchMethod(
        Invocation.setter(
          #state,
          value,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i2.AddFlashcardState get debugState => (super.noSuchMethod(
        Invocation.getter(#debugState),
        returnValue: _i2.AddFlashcardState.initial,
      ) as _i2.AddFlashcardState);
  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);
  @override
  _i4.Future<String?> addFlashcard(
    String? question,
    String? answer,
    String? color,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addFlashcard,
          [
            question,
            answer,
            color,
          ],
        ),
        returnValue: _i4.Future<String?>.value(),
      ) as _i4.Future<String?>);
  @override
  bool updateShouldNotify(
    _i2.AddFlashcardState? old,
    _i2.AddFlashcardState? current,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateShouldNotify,
          [
            old,
            current,
          ],
        ),
        returnValue: false,
      ) as bool);
  @override
  _i3.RemoveListener addListener(
    _i5.Listener<_i2.AddFlashcardState>? listener, {
    bool? fireImmediately = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
          {#fireImmediately: fireImmediately},
        ),
        returnValue: () {},
      ) as _i3.RemoveListener);
  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
